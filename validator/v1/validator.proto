syntax = "proto3";

package validator.v1;

option go_package = "github.com/grid-stream-org/grid-stream-protos/gen/validator/v1";

message AverageOutput {
  string project_id = 1;
  double contract_threshold = 2;
  double average_output = 3;
  string start_time = 4;
  string end_time = 5;
}

message ValidateAverageOutputsRequest {
  repeated AverageOutput average_outputs = 1;
}

message ValidateAverageOutputsResponse {
  bool success = 1;
  repeated ValidationError errors = 3;
}

message ValidationError {
  string project_id = 1;
  string message = 2;
}

message NotifyProjectRequest {
  string project_id = 1;
}

message NotifyProjectResponse {
  bool acknowledged = 1;
  repeated NotifyProjectError errors = 2;
}

message NotifyProjectError {
  string project_id = 1;
  string message = 2;
}

message GetValidationSummaryRequest {
  string projectId = 1;
}

message GetValidationSummaryResponse {
  string projectId = 1;
  string generatedAt = 2;
  int32 totalViolations = 3;
  float averageOutput = 4;
  float contractThreshold = 5;
  repeated ValidationEntry entries = 6;
}

message ValidationEntry {
  string timestamp = 1;
  float average = 2;
  float threshold = 3;
  int32 violations = 4;
}

service ValidatorService {
  rpc ValidateAverageOutputs(ValidateAverageOutputsRequest) returns (ValidateAverageOutputsResponse) {}
  rpc NotifyProject(NotifyProjectRequest) returns (NotifyProjectResponse) {}
  rpc GetValidationSummary(GetValidationSummaryRequest) returns (GetValidationSummaryResponse){}
}
